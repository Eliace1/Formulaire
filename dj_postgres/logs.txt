
==> Audit <==
|-----------|---------------------------|----------|-------------|---------|---------------------|---------------------|
|  Command  |           Args            | Profile  |    User     | Version |     Start Time      |      End Time       |
|-----------|---------------------------|----------|-------------|---------|---------------------|---------------------|
| start     | --driver=hyperv           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 15:53 WAT |                     |
| start     | --driver=hyperv           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 16:04 WAT | 07 Feb 25 16:23 WAT |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 16:40 WAT | 07 Feb 25 16:42 WAT |
| kubectl   | -- get pods -A            | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 16:43 WAT | 07 Feb 25 16:43 WAT |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 16:44 WAT | 07 Feb 25 16:48 WAT |
| kubectl   | -- get pods -A            | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 16:49 WAT | 07 Feb 25 16:49 WAT |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 17:02 WAT | 07 Feb 25 17:06 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 17:09 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 17:15 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 17:15 WAT |                     |
| start     | --driver=hyperv           | minikube | ASLIE\tacal | v1.35.0 | 07 Feb 25 17:16 WAT |                     |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 12:33 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 12:33 WAT |                     |
| delete    |                           | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 12:33 WAT | 17 Feb 25 12:34 WAT |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 12:36 WAT | 17 Feb 25 12:39 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 12:39 WAT |                     |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 12:40 WAT |                     |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 17 Feb 25 13:13 WAT | 17 Feb 25 13:13 WAT |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 08:53 WAT | 18 Feb 25 09:09 WAT |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 09:48 WAT | 18 Feb 25 09:48 WAT |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 09:48 WAT | 18 Feb 25 09:58 WAT |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 10:03 WAT | 18 Feb 25 10:04 WAT |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 10:04 WAT | 18 Feb 25 10:04 WAT |
| service   | --all -n vote             | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:12 WAT | 18 Feb 25 12:22 WAT |
| delete    |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:23 WAT | 18 Feb 25 12:23 WAT |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:23 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:26 WAT |                     |
| delete    |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:29 WAT | 18 Feb 25 12:29 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:32 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:44 WAT |                     |
| delete    |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:46 WAT | 18 Feb 25 12:46 WAT |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:47 WAT |                     |
| stop      |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:53 WAT |                     |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 12:57 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 18 Feb 25 13:09 WAT |                     |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 09 Mar 25 22:10 WAT |                     |
| delete    |                           | minikube | ASLIE\tacal | v1.35.0 | 09 Mar 25 22:15 WAT | 09 Mar 25 22:15 WAT |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 09 Mar 25 22:15 WAT | 09 Mar 25 22:18 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 09 Mar 25 22:19 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 09 Mar 25 22:23 WAT | 09 Mar 25 22:25 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 09 Mar 25 23:01 WAT |                     |
| service   | postgres-service          | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:16 WAT |                     |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:18 WAT |                     |
| service   | django-service            | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:22 WAT |                     |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:23 WAT | 10 Mar 25 00:25 WAT |
| service   | postgres-service          | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:27 WAT |                     |
| delete    | --all                     | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:27 WAT | 10 Mar 25 00:27 WAT |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 00:28 WAT |                     |
| delete    | --all                     | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:09 WAT | 10 Mar 25 12:09 WAT |
| start     | --driver=docker           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:09 WAT | 10 Mar 25 12:12 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:13 WAT |                     |
| service   | django-service            | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:27 WAT |                     |
| service   | django-service            | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:30 WAT |                     |
| service   | kubernetes                | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:42 WAT |                     |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:42 WAT | 10 Mar 25 12:44 WAT |
| dashboard |                           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 12:44 WAT |                     |
| service   | postgres-service          | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 13:00 WAT |                     |
| start     |                           | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 13:10 WAT |                     |
| start     | --image-mirror-country=cn | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 13:13 WAT |                     |
| start     | --image-mirror-country=cn | minikube | ASLIE\tacal | v1.35.0 | 10 Mar 25 13:15 WAT | 10 Mar 25 13:17 WAT |
|-----------|---------------------------|----------|-------------|---------|---------------------|---------------------|


==> Dernier d√©marrage <==
Log file created at: 2025/03/10 13:15:19
Running on machine: Aslie
Binary: Built with gc go1.23.4 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0310 13:15:19.151300   59960 out.go:345] Setting OutFile to fd 104 ...
I0310 13:15:19.278809   59960 out.go:392] TERM=,COLORTERM=, which probably does not support color
I0310 13:15:19.278809   59960 out.go:358] Setting ErrFile to fd 108...
I0310 13:15:19.278809   59960 out.go:392] TERM=,COLORTERM=, which probably does not support color
I0310 13:15:19.366693   59960 out.go:352] Setting JSON to false
I0310 13:15:19.385478   59960 start.go:129] hostinfo: {"hostname":"Aslie","uptime":360704,"bootTime":1741248214,"procs":420,"os":"windows","platform":"Microsoft Windows 11 Education","platformFamily":"Standalone Workstation","platformVersion":"10.0.26100.3194 Build 26100.3194","kernelVersion":"10.0.26100.3194 Build 26100.3194","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"62bea1d8-3f19-4343-b56b-5e79c5a05f7d"}
W0310 13:15:19.385478   59960 start.go:137] gopshost.Virtualization returned error: not implemented yet
I0310 13:15:19.387456   59960 out.go:177] * minikube v1.35.0 sur Microsoft Windows 11 Education 10.0.26100.3194 Build 26100.3194
I0310 13:15:19.388050   59960 notify.go:220] Checking for updates...
I0310 13:15:19.389779   59960 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0310 13:15:19.390340   59960 driver.go:394] Setting default libvirt URI to qemu:///system
I0310 13:15:19.843309   59960 docker.go:123] docker version: linux-27.4.0:Docker Desktop 4.37.1 (178610)
I0310 13:15:19.862464   59960 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0310 13:15:21.182386   59960 cli_runner.go:217] Completed: docker system info --format "{{json .}}": (1.3199225s)
I0310 13:15:21.184300   59960 info.go:266] docker info: {ID:ce4ca38a-10df-4bab-976f-d9628dc739a4 Containers:14 ContainersRunning:10 ContainersPaused:0 ContainersStopped:4 Images:16 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:114 OomKillDisable:true NGoroutines:191 SystemTime:2025-03-10 12:15:21.127518246 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:19 KernelVersion:5.15.167.4-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:7977910272 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:27.4.0 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:472731909fa34bd7bc9c087e4c27943f9835f111 Expected:472731909fa34bd7bc9c087e4c27943f9835f111} RuncCommit:{ID:v1.1.13-0-g58aa920 Expected:v1.1.13-0-g58aa920} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Ask Gordon - Docker Agent Vendor:Docker Inc. Version:v0.5.1] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.19.2-desktop.1] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.31.0-desktop.2] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.37] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.0] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.15.1]] Warnings:<nil>}}
I0310 13:15:21.186042   59960 out.go:177] * Utilisation du pilote docker bas√© sur le profil existant
I0310 13:15:21.186643   59960 start.go:297] selected driver: docker
I0310 13:15:21.186643   59960 start.go:901] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tacal:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0310 13:15:21.186643   59960 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0310 13:15:21.218648   59960 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0310 13:15:22.211678   59960 info.go:266] docker info: {ID:ce4ca38a-10df-4bab-976f-d9628dc739a4 Containers:14 ContainersRunning:10 ContainersPaused:0 ContainersStopped:4 Images:16 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:115 OomKillDisable:true NGoroutines:193 SystemTime:2025-03-10 12:15:22.16043157 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:19 KernelVersion:5.15.167.4-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:7977910272 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:27.4.0 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:472731909fa34bd7bc9c087e4c27943f9835f111 Expected:472731909fa34bd7bc9c087e4c27943f9835f111} RuncCommit:{ID:v1.1.13-0-g58aa920 Expected:v1.1.13-0-g58aa920} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Ask Gordon - Docker Agent Vendor:Docker Inc. Version:v0.5.1] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.19.2-desktop.1] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.31.0-desktop.2] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.37] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.0] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.15.1]] Warnings:<nil>}}
I0310 13:15:22.385906   59960 cni.go:84] Creating CNI manager for ""
I0310 13:15:22.385906   59960 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0310 13:15:22.385906   59960 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tacal:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0310 13:15:22.387130   59960 out.go:177] * D√©marrage du n≈ìud "minikube" primary control-plane dans le cluster "minikube"
I0310 13:15:22.388366   59960 cache.go:121] Beginning downloading kic base image for docker with docker
I0310 13:15:22.389080   59960 out.go:177] * Extraction de l'image de base v0.0.46...
I0310 13:15:22.389716   59960 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0310 13:15:22.389716   59960 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon
I0310 13:15:22.390309   59960 preload.go:146] Found local preload: C:\Users\tacal\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4
I0310 13:15:22.390309   59960 cache.go:56] Caching tarball of preloaded images
I0310 13:15:22.390907   59960 preload.go:172] Found C:\Users\tacal\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0310 13:15:22.390907   59960 cache.go:59] Finished verifying existence of preloaded tar for v1.32.0 on docker
I0310 13:15:22.391818   59960 profile.go:143] Saving config to C:\Users\tacal\.minikube\profiles\minikube\config.json ...
I0310 13:15:22.926595   59960 cache.go:150] Downloading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 to local cache
I0310 13:15:22.927104   59960 localpath.go:146] windows sanitize: C:\Users\tacal\.minikube\cache\kic\amd64\kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar -> C:\Users\tacal\.minikube\cache\kic\amd64\kicbase_v0.0.46@sha256_fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar
I0310 13:15:22.927615   59960 localpath.go:146] windows sanitize: C:\Users\tacal\.minikube\cache\kic\amd64\kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar -> C:\Users\tacal\.minikube\cache\kic\amd64\kicbase_v0.0.46@sha256_fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar
I0310 13:15:22.928228   59960 image.go:65] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local cache directory
I0310 13:15:22.928228   59960 image.go:68] Found gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local cache directory, skipping pull
I0310 13:15:22.928228   59960 image.go:137] gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 exists in cache, skipping pull
I0310 13:15:22.928228   59960 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 as a tarball
I0310 13:15:22.928228   59960 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from local cache
I0310 13:15:22.928771   59960 localpath.go:146] windows sanitize: C:\Users\tacal\.minikube\cache\kic\amd64\kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar -> C:\Users\tacal\.minikube\cache\kic\amd64\kicbase_v0.0.46@sha256_fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar
I0310 13:16:06.695863   59960 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from cached tarball
I0310 13:16:06.696438   59960 cache.go:227] Successfully downloaded all kic artifacts
I0310 13:16:06.700996   59960 start.go:360] acquireMachinesLock for minikube: {Name:mkd3132a1306f2a1e388c190bcf35adf3acc780a Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0310 13:16:06.700996   59960 start.go:364] duration metric: took 0s to acquireMachinesLock for "minikube"
I0310 13:16:06.701634   59960 start.go:96] Skipping create...Using existing machine configuration
I0310 13:16:06.702238   59960 fix.go:54] fixHost starting: 
I0310 13:16:06.765974   59960 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0310 13:16:07.012826   59960 fix.go:112] recreateIfNeeded on minikube: state=Running err=<nil>
W0310 13:16:07.012826   59960 fix.go:138] unexpected machine state, will restart: <nil>
I0310 13:16:07.013382   59960 out.go:177] * Mise √† jour du container docker en marche "minikube" ...
I0310 13:16:07.013910   59960 machine.go:93] provisionDockerMachine start ...
I0310 13:16:07.027810   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:07.212938   59960 main.go:141] libmachine: Using SSH client type: native
I0310 13:16:07.213530   59960 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x875360] 0x877ea0 <nil>  [] 0s} 127.0.0.1 59007 <nil> <nil>}
I0310 13:16:07.213530   59960 main.go:141] libmachine: About to run SSH command:
hostname
I0310 13:16:07.561586   59960 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0310 13:16:07.561586   59960 ubuntu.go:169] provisioning hostname "minikube"
I0310 13:16:07.579916   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:07.787191   59960 main.go:141] libmachine: Using SSH client type: native
I0310 13:16:07.787796   59960 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x875360] 0x877ea0 <nil>  [] 0s} 127.0.0.1 59007 <nil> <nil>}
I0310 13:16:07.787796   59960 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0310 13:16:08.067420   59960 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0310 13:16:08.085419   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:08.315461   59960 main.go:141] libmachine: Using SSH client type: native
I0310 13:16:08.316040   59960 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x875360] 0x877ea0 <nil>  [] 0s} 127.0.0.1 59007 <nil> <nil>}
I0310 13:16:08.316040   59960 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0310 13:16:08.547619   59960 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0310 13:16:08.547619   59960 ubuntu.go:175] set auth options {CertDir:C:\Users\tacal\.minikube CaCertPath:C:\Users\tacal\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\tacal\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\tacal\.minikube\machines\server.pem ServerKeyPath:C:\Users\tacal\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\tacal\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\tacal\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\tacal\.minikube}
I0310 13:16:08.548247   59960 ubuntu.go:177] setting up certificates
I0310 13:16:08.548247   59960 provision.go:84] configureAuth start
I0310 13:16:08.564469   59960 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0310 13:16:08.763318   59960 provision.go:143] copyHostCerts
I0310 13:16:08.764458   59960 exec_runner.go:144] found C:\Users\tacal\.minikube/ca.pem, removing ...
I0310 13:16:08.764458   59960 exec_runner.go:203] rm: C:\Users\tacal\.minikube\ca.pem
I0310 13:16:08.766353   59960 exec_runner.go:151] cp: C:\Users\tacal\.minikube\certs\ca.pem --> C:\Users\tacal\.minikube/ca.pem (1074 bytes)
I0310 13:16:08.770197   59960 exec_runner.go:144] found C:\Users\tacal\.minikube/cert.pem, removing ...
I0310 13:16:08.770197   59960 exec_runner.go:203] rm: C:\Users\tacal\.minikube\cert.pem
I0310 13:16:08.772433   59960 exec_runner.go:151] cp: C:\Users\tacal\.minikube\certs\cert.pem --> C:\Users\tacal\.minikube/cert.pem (1119 bytes)
I0310 13:16:08.775956   59960 exec_runner.go:144] found C:\Users\tacal\.minikube/key.pem, removing ...
I0310 13:16:08.775956   59960 exec_runner.go:203] rm: C:\Users\tacal\.minikube\key.pem
I0310 13:16:08.777137   59960 exec_runner.go:151] cp: C:\Users\tacal\.minikube\certs\key.pem --> C:\Users\tacal\.minikube/key.pem (1679 bytes)
I0310 13:16:08.780667   59960 provision.go:117] generating server cert: C:\Users\tacal\.minikube\machines\server.pem ca-key=C:\Users\tacal\.minikube\certs\ca.pem private-key=C:\Users\tacal\.minikube\certs\ca-key.pem org=tacal.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0310 13:16:08.990639   59960 provision.go:177] copyRemoteCerts
I0310 13:16:08.993655   59960 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0310 13:16:09.013497   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:09.196520   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:16:09.347890   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0310 13:16:09.426252   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0310 13:16:09.501987   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\machines\server.pem --> /etc/docker/server.pem (1176 bytes)
I0310 13:16:09.572301   59960 provision.go:87] duration metric: took 1.0240536s to configureAuth
I0310 13:16:09.572301   59960 ubuntu.go:193] setting minikube options for container-runtime
I0310 13:16:09.573753   59960 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0310 13:16:09.589571   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:09.794198   59960 main.go:141] libmachine: Using SSH client type: native
I0310 13:16:09.794791   59960 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x875360] 0x877ea0 <nil>  [] 0s} 127.0.0.1 59007 <nil> <nil>}
I0310 13:16:09.794791   59960 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0310 13:16:10.013609   59960 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0310 13:16:10.013609   59960 ubuntu.go:71] root file system type: overlay
I0310 13:16:10.013609   59960 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0310 13:16:10.034008   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:10.229599   59960 main.go:141] libmachine: Using SSH client type: native
I0310 13:16:10.230219   59960 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x875360] 0x877ea0 <nil>  [] 0s} 127.0.0.1 59007 <nil> <nil>}
I0310 13:16:10.230219   59960 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0310 13:16:10.472765   59960 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0310 13:16:10.486813   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:10.687955   59960 main.go:141] libmachine: Using SSH client type: native
I0310 13:16:10.688545   59960 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x875360] 0x877ea0 <nil>  [] 0s} 127.0.0.1 59007 <nil> <nil>}
I0310 13:16:10.688545   59960 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0310 13:16:10.916585   59960 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0310 13:16:10.916585   59960 machine.go:96] duration metric: took 3.902675s to provisionDockerMachine
I0310 13:16:10.916585   59960 start.go:293] postStartSetup for "minikube" (driver="docker")
I0310 13:16:10.916585   59960 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0310 13:16:10.922104   59960 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0310 13:16:10.937583   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:11.130506   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:16:11.303528   59960 ssh_runner.go:195] Run: cat /etc/os-release
I0310 13:16:11.317445   59960 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0310 13:16:11.317445   59960 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0310 13:16:11.317445   59960 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0310 13:16:11.317445   59960 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0310 13:16:11.317445   59960 filesync.go:126] Scanning C:\Users\tacal\.minikube\addons for local assets ...
I0310 13:16:11.318644   59960 filesync.go:126] Scanning C:\Users\tacal\.minikube\files for local assets ...
I0310 13:16:11.318644   59960 start.go:296] duration metric: took 402.0593ms for postStartSetup
I0310 13:16:11.345695   59960 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0310 13:16:11.360951   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:11.562309   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:16:11.734757   59960 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0310 13:16:11.753152   59960 fix.go:56] duration metric: took 5.0509139s for fixHost
I0310 13:16:11.753152   59960 start.go:83] releasing machines lock for "minikube", held for 5.0521557s
I0310 13:16:11.767377   59960 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0310 13:16:11.958252   59960 ssh_runner.go:195] Run: curl.exe -sS -m 2 https://registry.k8s.io/
I0310 13:16:11.979588   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:11.985011   59960 ssh_runner.go:195] Run: cat /version.json
I0310 13:16:12.000335   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:16:12.184881   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:16:12.217108   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
W0310 13:16:12.328935   59960 start.go:867] [curl.exe -sS -m 2 https://registry.k8s.io/] failed: curl.exe -sS -m 2 https://registry.k8s.io/: Process exited with status 127
stdout:

stderr:
bash: line 1: curl.exe: command not found
I0310 13:16:12.402031   59960 ssh_runner.go:195] Run: systemctl --version
I0310 13:16:12.477510   59960 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0310 13:16:12.498846   59960 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0310 13:16:12.531411   59960 start.go:439] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0310 13:16:12.534943   59960 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0310 13:16:12.563156   59960 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0310 13:16:12.563156   59960 start.go:495] detecting cgroup driver to use...
I0310 13:16:12.563156   59960 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0310 13:16:12.563156   59960 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0310 13:16:12.647937   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0310 13:16:12.711148   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0310 13:16:12.754138   59960 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0310 13:16:12.776514   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0310 13:16:12.830637   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0310 13:16:12.892401   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0310 13:16:12.950041   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
W0310 13:16:12.974923   59960 out.go:270] ! √âchec de la connexion √† https://registry.k8s.io/ depuis l'int√©rieur du minikube container
W0310 13:16:12.974923   59960 out.go:270] * Pour extraire de nouvelles images externes, vous devrez peut-√™tre configurer un proxy¬†: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
I0310 13:16:13.010481   59960 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0310 13:16:13.061800   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0310 13:16:13.119018   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0310 13:16:13.171277   59960 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0310 13:16:13.205471   59960 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0310 13:16:13.239358   59960 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0310 13:16:13.270074   59960 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0310 13:16:13.893131   59960 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0310 13:16:26.136739   59960 ssh_runner.go:235] Completed: sudo systemctl restart containerd: (12.2436075s)
I0310 13:16:26.136739   59960 start.go:495] detecting cgroup driver to use...
I0310 13:16:26.136739   59960 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0310 13:16:26.144357   59960 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0310 13:16:26.189654   59960 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0310 13:16:26.194580   59960 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0310 13:16:26.255133   59960 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0310 13:16:26.337357   59960 ssh_runner.go:195] Run: which cri-dockerd
I0310 13:16:26.358903   59960 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0310 13:16:26.393608   59960 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0310 13:16:26.474797   59960 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0310 13:16:26.852789   59960 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0310 13:16:27.204318   59960 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I0310 13:16:27.204318   59960 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0310 13:16:27.268750   59960 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0310 13:16:27.961234   59960 ssh_runner.go:195] Run: sudo systemctl restart docker
I0310 13:16:30.482346   59960 ssh_runner.go:235] Completed: sudo systemctl restart docker: (2.5211123s)
I0310 13:16:30.488984   59960 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0310 13:16:30.534113   59960 ssh_runner.go:195] Run: sudo systemctl stop cri-docker.socket
I0310 13:16:30.782721   59960 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0310 13:16:30.836541   59960 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0310 13:16:31.176069   59960 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0310 13:16:31.447918   59960 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0310 13:16:31.710895   59960 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0310 13:16:31.774536   59960 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0310 13:16:31.813560   59960 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0310 13:16:32.108196   59960 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0310 13:16:32.645589   59960 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0310 13:16:32.677583   59960 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0310 13:16:32.694764   59960 start.go:563] Will wait 60s for crictl version
I0310 13:16:32.741993   59960 ssh_runner.go:195] Run: which crictl
I0310 13:16:32.764758   59960 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0310 13:16:34.537022   59960 ssh_runner.go:235] Completed: sudo /usr/bin/crictl version: (1.7722632s)
I0310 13:16:34.537592   59960 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.4.1
RuntimeApiVersion:  v1
I0310 13:16:34.559769   59960 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0310 13:16:37.735143   59960 ssh_runner.go:235] Completed: docker version --format {{.Server.Version}}: (3.1753745s)
I0310 13:16:37.756747   59960 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0310 13:16:39.728242   59960 ssh_runner.go:235] Completed: docker version --format {{.Server.Version}}: (1.9714948s)
I0310 13:16:39.734008   59960 out.go:235] * Pr√©paration de Kubernetes v1.32.0 sur Docker 27.4.1...
I0310 13:16:39.752441   59960 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0310 13:16:42.791503   59960 cli_runner.go:217] Completed: docker exec -t minikube dig +short host.docker.internal: (3.0384956s)
I0310 13:16:42.791503   59960 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0310 13:16:42.819424   59960 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0310 13:16:43.052583   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0310 13:16:43.320501   59960 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tacal:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0310 13:16:43.320501   59960 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0310 13:16:43.347994   59960 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0310 13:16:44.235225   59960 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
kubernetesui/dashboard:<none>
kubernetesui/metrics-scraper:<none>
gcr.io/k8s-minikube/storage-provisioner:v5
gitumarkk/k8_django_minikube:part_3
postgres:9.6.6

-- /stdout --
I0310 13:16:44.235225   59960 docker.go:619] Images already preloaded, skipping extraction
I0310 13:16:44.256427   59960 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0310 13:16:44.729697   59960 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
kubernetesui/dashboard:<none>
kubernetesui/metrics-scraper:<none>
gcr.io/k8s-minikube/storage-provisioner:v5
gitumarkk/k8_django_minikube:part_3
postgres:9.6.6

-- /stdout --
I0310 13:16:44.730282   59960 cache_images.go:84] Images are preloaded, skipping loading
I0310 13:16:44.730282   59960 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.32.0 docker true true} ...
I0310 13:16:44.730867   59960 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.32.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0310 13:16:44.765524   59960 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0310 13:16:50.033393   59960 ssh_runner.go:235] Completed: docker info --format {{.CgroupDriver}}: (5.2678684s)
I0310 13:16:50.034736   59960 cni.go:84] Creating CNI manager for ""
I0310 13:16:50.034736   59960 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0310 13:16:50.034736   59960 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0310 13:16:50.034736   59960 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.32.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0310 13:16:50.035409   59960 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.32.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0310 13:16:50.044185   59960 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.32.0
I0310 13:16:50.343164   59960 binaries.go:44] Found k8s binaries, skipping transfer
I0310 13:16:50.347150   59960 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0310 13:16:50.740369   59960 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0310 13:16:51.431844   59960 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0310 13:16:52.048002   59960 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2286 bytes)
I0310 13:16:52.862196   59960 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0310 13:16:52.948297   59960 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0310 13:16:55.332711   59960 ssh_runner.go:235] Completed: sudo systemctl daemon-reload: (2.3844144s)
I0310 13:16:55.341841   59960 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0310 13:16:55.534502   59960 certs.go:68] Setting up C:\Users\tacal\.minikube\profiles\minikube for IP: 192.168.49.2
I0310 13:16:55.534502   59960 certs.go:194] generating shared ca certs ...
I0310 13:16:55.535731   59960 certs.go:226] acquiring lock for ca certs: {Name:mk3e6c25062ef6ece8d4f43ee4d119de4f33067e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0310 13:16:55.536900   59960 certs.go:235] skipping valid "minikubeCA" ca cert: C:\Users\tacal\.minikube\ca.key
I0310 13:16:55.538667   59960 certs.go:235] skipping valid "proxyClientCA" ca cert: C:\Users\tacal\.minikube\proxy-client-ca.key
I0310 13:16:55.539217   59960 certs.go:256] generating profile certs ...
I0310 13:16:55.542256   59960 certs.go:359] skipping valid signed profile cert regeneration for "minikube-user": C:\Users\tacal\.minikube\profiles\minikube\client.key
I0310 13:16:55.544219   59960 certs.go:359] skipping valid signed profile cert regeneration for "minikube": C:\Users\tacal\.minikube\profiles\minikube\apiserver.key.7fb57e3c
I0310 13:16:55.545532   59960 certs.go:359] skipping valid signed profile cert regeneration for "aggregator": C:\Users\tacal\.minikube\profiles\minikube\proxy-client.key
I0310 13:16:55.549283   59960 certs.go:484] found cert: C:\Users\tacal\.minikube\certs\ca-key.pem (1675 bytes)
I0310 13:16:55.549283   59960 certs.go:484] found cert: C:\Users\tacal\.minikube\certs\ca.pem (1074 bytes)
I0310 13:16:55.549925   59960 certs.go:484] found cert: C:\Users\tacal\.minikube\certs\cert.pem (1119 bytes)
I0310 13:16:55.550563   59960 certs.go:484] found cert: C:\Users\tacal\.minikube\certs\key.pem (1679 bytes)
I0310 13:16:55.553403   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0310 13:16:55.841782   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0310 13:16:56.059334   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0310 13:16:56.248719   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0310 13:16:56.447876   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0310 13:16:56.727884   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0310 13:16:57.033699   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0310 13:16:57.431246   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0310 13:16:57.834791   59960 ssh_runner.go:362] scp C:\Users\tacal\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0310 13:16:58.135222   59960 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0310 13:16:58.372187   59960 ssh_runner.go:195] Run: openssl version
I0310 13:16:58.466741   59960 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0310 13:16:58.664247   59960 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0310 13:16:58.734431   59960 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Feb  7 15:23 /usr/share/ca-certificates/minikubeCA.pem
I0310 13:16:58.768514   59960 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0310 13:16:59.032757   59960 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0310 13:16:59.173558   59960 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0310 13:16:59.272144   59960 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0310 13:16:59.385002   59960 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0310 13:16:59.480736   59960 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0310 13:16:59.580284   59960 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0310 13:16:59.672714   59960 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0310 13:16:59.775677   59960 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0310 13:16:59.840722   59960 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\tacal:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0310 13:16:59.860032   59960 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0310 13:17:00.057936   59960 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0310 13:17:00.227298   59960 kubeadm.go:408] found existing configuration files, will attempt cluster restart
I0310 13:17:00.227298   59960 kubeadm.go:593] restartPrimaryControlPlane start ...
I0310 13:17:00.231655   59960 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0310 13:17:00.267652   59960 kubeadm.go:130] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0310 13:17:00.284604   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0310 13:17:00.621927   59960 kubeconfig.go:125] found "minikube" server: "https://127.0.0.1:59006"
I0310 13:17:00.635029   59960 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0310 13:17:00.672875   59960 kubeadm.go:630] The running cluster does not require reconfiguration: 127.0.0.1
I0310 13:17:00.672875   59960 kubeadm.go:597] duration metric: took 445.577ms to restartPrimaryControlPlane
I0310 13:17:00.672875   59960 kubeadm.go:394] duration metric: took 832.1524ms to StartCluster
I0310 13:17:00.672875   59960 settings.go:142] acquiring lock: {Name:mkda1837061e47cb68635c01ba51c72e0ddbf14b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0310 13:17:00.673514   59960 settings.go:150] Updating kubeconfig:  C:\Users\tacal\.kube\config
I0310 13:17:00.677741   59960 lock.go:35] WriteFile acquiring C:\Users\tacal\.kube\config: {Name:mk14365aacadf0ea2cde494a4b60bffe01d9b77d Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0310 13:17:00.681437   59960 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0310 13:17:00.681437   59960 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:true default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0310 13:17:00.681437   59960 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0310 13:17:00.681437   59960 addons.go:69] Setting dashboard=true in profile "minikube"
I0310 13:17:00.681437   59960 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0310 13:17:00.681437   59960 addons.go:238] Setting addon dashboard=true in "minikube"
W0310 13:17:00.681437   59960 addons.go:247] addon dashboard should already be in state true
I0310 13:17:00.681437   59960 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0310 13:17:00.681437   59960 addons.go:238] Setting addon storage-provisioner=true in "minikube"
W0310 13:17:00.681437   59960 addons.go:247] addon storage-provisioner should already be in state true
I0310 13:17:00.682466   59960 out.go:177] * V√©rification des composants Kubernetes...
I0310 13:17:00.682990   59960 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0310 13:17:00.684843   59960 host.go:66] Checking if "minikube" exists ...
I0310 13:17:00.684843   59960 host.go:66] Checking if "minikube" exists ...
I0310 13:17:00.695136   59960 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0310 13:17:00.729785   59960 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0310 13:17:00.732248   59960 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0310 13:17:00.738065   59960 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0310 13:17:00.968951   59960 addons.go:238] Setting addon default-storageclass=true in "minikube"
W0310 13:17:00.968951   59960 addons.go:247] addon default-storageclass should already be in state true
I0310 13:17:00.969539   59960 host.go:66] Checking if "minikube" exists ...
I0310 13:17:00.978100   59960 out.go:177]   - Utilisation de l'image docker.io/kubernetesui/dashboard:v2.7.0
I0310 13:17:00.979355   59960 out.go:177]   - Utilisation de l'image docker.io/kubernetesui/metrics-scraper:v1.0.8
I0310 13:17:00.979931   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-ns.yaml
I0310 13:17:00.979931   59960 ssh_runner.go:362] scp dashboard/dashboard-ns.yaml --> /etc/kubernetes/addons/dashboard-ns.yaml (759 bytes)
I0310 13:17:00.999511   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:17:01.004771   59960 out.go:177]   - Utilisation de l'image gcr.io/k8s-minikube/storage-provisioner:v5
I0310 13:17:01.005326   59960 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0310 13:17:01.005326   59960 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0310 13:17:01.012182   59960 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0310 13:17:01.023307   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:17:01.247573   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:17:01.259630   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:17:01.273021   59960 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0310 13:17:01.273021   59960 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0310 13:17:01.289391   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0310 13:17:01.445714   59960 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0310 13:17:01.501467   59960 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:59007 SSHKeyPath:C:\Users\tacal\.minikube\machines\minikube\id_rsa Username:docker}
I0310 13:17:01.566008   59960 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0310 13:17:01.648508   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-clusterrole.yaml
I0310 13:17:01.648508   59960 ssh_runner.go:362] scp dashboard/dashboard-clusterrole.yaml --> /etc/kubernetes/addons/dashboard-clusterrole.yaml (1001 bytes)
I0310 13:17:01.659796   59960 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0310 13:17:01.792126   59960 api_server.go:52] waiting for apiserver process to appear ...
I0310 13:17:01.796239   59960 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0310 13:17:01.828302   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml
I0310 13:17:01.828302   59960 ssh_runner.go:362] scp dashboard/dashboard-clusterrolebinding.yaml --> /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml (1018 bytes)
I0310 13:17:01.858888   59960 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0310 13:17:01.951177   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-configmap.yaml
I0310 13:17:01.951177   59960 ssh_runner.go:362] scp dashboard/dashboard-configmap.yaml --> /etc/kubernetes/addons/dashboard-configmap.yaml (837 bytes)
I0310 13:17:02.069781   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-dp.yaml
I0310 13:17:02.069781   59960 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/dashboard-dp.yaml (4288 bytes)
I0310 13:17:02.339404   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-role.yaml
I0310 13:17:02.339404   59960 ssh_runner.go:362] scp dashboard/dashboard-role.yaml --> /etc/kubernetes/addons/dashboard-role.yaml (1724 bytes)
I0310 13:17:02.462199   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-rolebinding.yaml
I0310 13:17:02.462199   59960 ssh_runner.go:362] scp dashboard/dashboard-rolebinding.yaml --> /etc/kubernetes/addons/dashboard-rolebinding.yaml (1046 bytes)
I0310 13:17:02.636780   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-sa.yaml
I0310 13:17:02.637384   59960 ssh_runner.go:362] scp dashboard/dashboard-sa.yaml --> /etc/kubernetes/addons/dashboard-sa.yaml (837 bytes)
I0310 13:17:02.865723   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-secret.yaml
I0310 13:17:02.865723   59960 ssh_runner.go:362] scp dashboard/dashboard-secret.yaml --> /etc/kubernetes/addons/dashboard-secret.yaml (1389 bytes)
I0310 13:17:03.434045   59960 addons.go:435] installing /etc/kubernetes/addons/dashboard-svc.yaml
I0310 13:17:03.434045   59960 ssh_runner.go:362] scp dashboard/dashboard-svc.yaml --> /etc/kubernetes/addons/dashboard-svc.yaml (1294 bytes)
I0310 13:17:04.239527   59960 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml
I0310 13:17:12.851789   59960 ssh_runner.go:235] Completed: sudo pgrep -xnf kube-apiserver.*minikube.*: (11.0555493s)
I0310 13:17:12.851789   59960 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (10.9923147s)
I0310 13:17:12.851789   59960 api_server.go:72] duration metric: took 12.1703519s to wait for apiserver process to appear ...
I0310 13:17:12.851789   59960 api_server.go:88] waiting for apiserver healthz status ...
I0310 13:17:12.851789   59960 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:59006/healthz ...
I0310 13:17:12.851789   59960 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (11.191993s)
I0310 13:17:13.049836   59960 api_server.go:279] https://127.0.0.1:59006/healthz returned 200:
ok
I0310 13:17:13.132061   59960 api_server.go:141] control plane version: v1.32.0
I0310 13:17:13.132061   59960 api_server.go:131] duration metric: took 280.2724ms to wait for apiserver health ...
I0310 13:17:13.132061   59960 system_pods.go:43] waiting for kube-system pods to appear ...
I0310 13:17:13.248950   59960 system_pods.go:59] 7 kube-system pods found
I0310 13:17:13.248950   59960 system_pods.go:61] "coredns-668d6bf9bc-skghs" [25802a73-798d-4ae7-9523-ff609a1b57c5] Running
I0310 13:17:13.248950   59960 system_pods.go:61] "etcd-minikube" [c1867b75-14d2-4de2-b48c-d6d749a5572d] Running
I0310 13:17:13.248950   59960 system_pods.go:61] "kube-apiserver-minikube" [77f70366-58cd-43f8-99bc-18b2b44f2f8e] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0310 13:17:13.248950   59960 system_pods.go:61] "kube-controller-manager-minikube" [05500fe7-3758-44a6-b050-49ba66e39d5b] Running
I0310 13:17:13.248950   59960 system_pods.go:61] "kube-proxy-mvkq4" [80e8221e-5ba8-4f1c-b22f-501e141f92bd] Running
I0310 13:17:13.248950   59960 system_pods.go:61] "kube-scheduler-minikube" [661c21f6-e74f-4fa9-94b8-a71064af1a8e] Running
I0310 13:17:13.248950   59960 system_pods.go:61] "storage-provisioner" [b10a5c63-ba7b-4e8d-9e9f-8e292e88b89a] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I0310 13:17:13.248950   59960 system_pods.go:74] duration metric: took 116.8893ms to wait for pod list to return data ...
I0310 13:17:13.248950   59960 kubeadm.go:582] duration metric: took 12.5675136s to wait for: map[apiserver:true system_pods:true]
I0310 13:17:13.248950   59960 node_conditions.go:102] verifying NodePressure condition ...
I0310 13:17:13.333293   59960 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0310 13:17:13.333293   59960 node_conditions.go:123] node cpu capacity is 16
I0310 13:17:13.333946   59960 node_conditions.go:105] duration metric: took 84.996ms to run NodePressure ...
I0310 13:17:13.333946   59960 start.go:241] waiting for startup goroutines ...
I0310 13:17:20.435562   59960 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml: (16.195446s)
I0310 13:17:20.436742   59960 out.go:177] * Certaines fonctionnalit√©s du tableau de bord n√©cessitent le module compl√©mentaire metrics-server. Pour activer toutes les fonctionnalit√©s, veuillez ex√©cuter¬†:

	minikube addons enable metrics-server

I0310 13:17:20.437994   59960 out.go:177] * Modules activ√©s: storage-provisioner, default-storageclass, dashboard
I0310 13:17:20.439839   59960 addons.go:514] duration metric: took 19.7584019s for enable addons: enabled=[storage-provisioner default-storageclass dashboard]
I0310 13:17:20.439839   59960 start.go:246] waiting for cluster config update ...
I0310 13:17:20.440534   59960 start.go:255] writing updated cluster config ...
I0310 13:17:20.471280   59960 ssh_runner.go:195] Run: rm -f paused
I0310 13:17:22.084727   59960 start.go:600] kubectl: 1.32.0, cluster: 1.32.0 (minor skew: 0)
I0310 13:17:22.085969   59960 out.go:177] * Termin√© ! kubectl est maintenant configur√© pour utiliser "minikube" cluster et espace de noms "default" par d√©faut.


==> Docker <==
command /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 60" failed with error: NewSession: new client: new client: Error creating new native config from ssh using: docker, &{[] [C:\Users\tacal\.minikube\machines\minikube\id_rsa]}: open C:\Users\tacal\.minikube\machines\minikube\id_rsa: Access is denied.

==> container status <==
command /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a" failed with error: NewSession: new client: new client: Error creating new native config from ssh using: docker, &{[] [C:\Users\tacal\.minikube\machines\minikube\id_rsa]}: open C:\Users\tacal\.minikube\machines\minikube\id_rsa: Access is denied.

==> describe nodes <==
command /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig" failed with error: NewSession: new client: new client: Error creating new native config from ssh using: docker, &{[] [C:\Users\tacal\.minikube\machines\minikube\id_rsa]}: open C:\Users\tacal\.minikube\machines\minikube\id_rsa: Access is denied.

==> dmesg <==
command /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 60" failed with error: NewSession: new client: new client: Error creating new native config from ssh using: docker, &{[] [C:\Users\tacal\.minikube\machines\minikube\id_rsa]}: open C:\Users\tacal\.minikube\machines\minikube\id_rsa: Access is denied.

==> kernel <==
command /bin/bash -c "uptime && uname -a && grep PRETTY /etc/os-release" failed with error: NewSession: new client: new client: Error creating new native config from ssh using: docker, &{[] [C:\Users\tacal\.minikube\machines\minikube\id_rsa]}: open C:\Users\tacal\.minikube\machines\minikube\id_rsa: Access is denied.

==> kubelet <==
command /bin/bash -c "sudo journalctl -u kubelet -n 60" failed with error: NewSession: new client: new client: Error creating new native config from ssh using: docker, &{[] [C:\Users\tacal\.minikube\machines\minikube\id_rsa]}: open C:\Users\tacal\.minikube\machines\minikube\id_rsa: Access is denied.
